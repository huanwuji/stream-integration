// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: main/resources/proto/kafka/kafka_data.proto

package kafka;

public final class KafkaDataOuterClass {
  private KafkaDataOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface KafkaDataListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:kafka.KafkaDataList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .kafka.KafkaData kafkaData = 1;</code>
     */
    java.util.List<kafka.KafkaDataOuterClass.KafkaData> 
        getKafkaDataList();
    /**
     * <code>repeated .kafka.KafkaData kafkaData = 1;</code>
     */
    kafka.KafkaDataOuterClass.KafkaData getKafkaData(int index);
    /**
     * <code>repeated .kafka.KafkaData kafkaData = 1;</code>
     */
    int getKafkaDataCount();
    /**
     * <code>repeated .kafka.KafkaData kafkaData = 1;</code>
     */
    java.util.List<? extends kafka.KafkaDataOuterClass.KafkaDataOrBuilder> 
        getKafkaDataOrBuilderList();
    /**
     * <code>repeated .kafka.KafkaData kafkaData = 1;</code>
     */
    kafka.KafkaDataOuterClass.KafkaDataOrBuilder getKafkaDataOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code kafka.KafkaDataList}
   */
  public static final class KafkaDataList extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:kafka.KafkaDataList)
      KafkaDataListOrBuilder {
    // Use KafkaDataList.newBuilder() to construct.
    private KafkaDataList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private KafkaDataList(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final KafkaDataList defaultInstance;
    public static KafkaDataList getDefaultInstance() {
      return defaultInstance;
    }

    public KafkaDataList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private KafkaDataList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                kafkaData_ = new java.util.ArrayList<kafka.KafkaDataOuterClass.KafkaData>();
                mutable_bitField0_ |= 0x00000001;
              }
              kafkaData_.add(input.readMessage(kafka.KafkaDataOuterClass.KafkaData.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          kafkaData_ = java.util.Collections.unmodifiableList(kafkaData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kafka.KafkaDataOuterClass.internal_static_kafka_KafkaDataList_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kafka.KafkaDataOuterClass.internal_static_kafka_KafkaDataList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kafka.KafkaDataOuterClass.KafkaDataList.class, kafka.KafkaDataOuterClass.KafkaDataList.Builder.class);
    }

    public static com.google.protobuf.Parser<KafkaDataList> PARSER =
        new com.google.protobuf.AbstractParser<KafkaDataList>() {
      public KafkaDataList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new KafkaDataList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<KafkaDataList> getParserForType() {
      return PARSER;
    }

    public static final int KAFKADATA_FIELD_NUMBER = 1;
    private java.util.List<kafka.KafkaDataOuterClass.KafkaData> kafkaData_;
    /**
     * <code>repeated .kafka.KafkaData kafkaData = 1;</code>
     */
    public java.util.List<kafka.KafkaDataOuterClass.KafkaData> getKafkaDataList() {
      return kafkaData_;
    }
    /**
     * <code>repeated .kafka.KafkaData kafkaData = 1;</code>
     */
    public java.util.List<? extends kafka.KafkaDataOuterClass.KafkaDataOrBuilder> 
        getKafkaDataOrBuilderList() {
      return kafkaData_;
    }
    /**
     * <code>repeated .kafka.KafkaData kafkaData = 1;</code>
     */
    public int getKafkaDataCount() {
      return kafkaData_.size();
    }
    /**
     * <code>repeated .kafka.KafkaData kafkaData = 1;</code>
     */
    public kafka.KafkaDataOuterClass.KafkaData getKafkaData(int index) {
      return kafkaData_.get(index);
    }
    /**
     * <code>repeated .kafka.KafkaData kafkaData = 1;</code>
     */
    public kafka.KafkaDataOuterClass.KafkaDataOrBuilder getKafkaDataOrBuilder(
        int index) {
      return kafkaData_.get(index);
    }

    private void initFields() {
      kafkaData_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getKafkaDataCount(); i++) {
        if (!getKafkaData(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < kafkaData_.size(); i++) {
        output.writeMessage(1, kafkaData_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < kafkaData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, kafkaData_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static kafka.KafkaDataOuterClass.KafkaDataList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kafka.KafkaDataOuterClass.KafkaDataList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kafka.KafkaDataOuterClass.KafkaDataList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kafka.KafkaDataOuterClass.KafkaDataList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kafka.KafkaDataOuterClass.KafkaDataList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static kafka.KafkaDataOuterClass.KafkaDataList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static kafka.KafkaDataOuterClass.KafkaDataList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static kafka.KafkaDataOuterClass.KafkaDataList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static kafka.KafkaDataOuterClass.KafkaDataList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static kafka.KafkaDataOuterClass.KafkaDataList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(kafka.KafkaDataOuterClass.KafkaDataList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code kafka.KafkaDataList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:kafka.KafkaDataList)
        kafka.KafkaDataOuterClass.KafkaDataListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kafka.KafkaDataOuterClass.internal_static_kafka_KafkaDataList_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kafka.KafkaDataOuterClass.internal_static_kafka_KafkaDataList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kafka.KafkaDataOuterClass.KafkaDataList.class, kafka.KafkaDataOuterClass.KafkaDataList.Builder.class);
      }

      // Construct using kafka.KafkaDataOuterClass.KafkaDataList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getKafkaDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (kafkaDataBuilder_ == null) {
          kafkaData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          kafkaDataBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kafka.KafkaDataOuterClass.internal_static_kafka_KafkaDataList_descriptor;
      }

      public kafka.KafkaDataOuterClass.KafkaDataList getDefaultInstanceForType() {
        return kafka.KafkaDataOuterClass.KafkaDataList.getDefaultInstance();
      }

      public kafka.KafkaDataOuterClass.KafkaDataList build() {
        kafka.KafkaDataOuterClass.KafkaDataList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public kafka.KafkaDataOuterClass.KafkaDataList buildPartial() {
        kafka.KafkaDataOuterClass.KafkaDataList result = new kafka.KafkaDataOuterClass.KafkaDataList(this);
        int from_bitField0_ = bitField0_;
        if (kafkaDataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            kafkaData_ = java.util.Collections.unmodifiableList(kafkaData_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.kafkaData_ = kafkaData_;
        } else {
          result.kafkaData_ = kafkaDataBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kafka.KafkaDataOuterClass.KafkaDataList) {
          return mergeFrom((kafka.KafkaDataOuterClass.KafkaDataList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kafka.KafkaDataOuterClass.KafkaDataList other) {
        if (other == kafka.KafkaDataOuterClass.KafkaDataList.getDefaultInstance()) return this;
        if (kafkaDataBuilder_ == null) {
          if (!other.kafkaData_.isEmpty()) {
            if (kafkaData_.isEmpty()) {
              kafkaData_ = other.kafkaData_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureKafkaDataIsMutable();
              kafkaData_.addAll(other.kafkaData_);
            }
            onChanged();
          }
        } else {
          if (!other.kafkaData_.isEmpty()) {
            if (kafkaDataBuilder_.isEmpty()) {
              kafkaDataBuilder_.dispose();
              kafkaDataBuilder_ = null;
              kafkaData_ = other.kafkaData_;
              bitField0_ = (bitField0_ & ~0x00000001);
              kafkaDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getKafkaDataFieldBuilder() : null;
            } else {
              kafkaDataBuilder_.addAllMessages(other.kafkaData_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getKafkaDataCount(); i++) {
          if (!getKafkaData(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        kafka.KafkaDataOuterClass.KafkaDataList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (kafka.KafkaDataOuterClass.KafkaDataList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<kafka.KafkaDataOuterClass.KafkaData> kafkaData_ =
        java.util.Collections.emptyList();
      private void ensureKafkaDataIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          kafkaData_ = new java.util.ArrayList<kafka.KafkaDataOuterClass.KafkaData>(kafkaData_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kafka.KafkaDataOuterClass.KafkaData, kafka.KafkaDataOuterClass.KafkaData.Builder, kafka.KafkaDataOuterClass.KafkaDataOrBuilder> kafkaDataBuilder_;

      /**
       * <code>repeated .kafka.KafkaData kafkaData = 1;</code>
       */
      public java.util.List<kafka.KafkaDataOuterClass.KafkaData> getKafkaDataList() {
        if (kafkaDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(kafkaData_);
        } else {
          return kafkaDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .kafka.KafkaData kafkaData = 1;</code>
       */
      public int getKafkaDataCount() {
        if (kafkaDataBuilder_ == null) {
          return kafkaData_.size();
        } else {
          return kafkaDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .kafka.KafkaData kafkaData = 1;</code>
       */
      public kafka.KafkaDataOuterClass.KafkaData getKafkaData(int index) {
        if (kafkaDataBuilder_ == null) {
          return kafkaData_.get(index);
        } else {
          return kafkaDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .kafka.KafkaData kafkaData = 1;</code>
       */
      public Builder setKafkaData(
          int index, kafka.KafkaDataOuterClass.KafkaData value) {
        if (kafkaDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKafkaDataIsMutable();
          kafkaData_.set(index, value);
          onChanged();
        } else {
          kafkaDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .kafka.KafkaData kafkaData = 1;</code>
       */
      public Builder setKafkaData(
          int index, kafka.KafkaDataOuterClass.KafkaData.Builder builderForValue) {
        if (kafkaDataBuilder_ == null) {
          ensureKafkaDataIsMutable();
          kafkaData_.set(index, builderForValue.build());
          onChanged();
        } else {
          kafkaDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .kafka.KafkaData kafkaData = 1;</code>
       */
      public Builder addKafkaData(kafka.KafkaDataOuterClass.KafkaData value) {
        if (kafkaDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKafkaDataIsMutable();
          kafkaData_.add(value);
          onChanged();
        } else {
          kafkaDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .kafka.KafkaData kafkaData = 1;</code>
       */
      public Builder addKafkaData(
          int index, kafka.KafkaDataOuterClass.KafkaData value) {
        if (kafkaDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKafkaDataIsMutable();
          kafkaData_.add(index, value);
          onChanged();
        } else {
          kafkaDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .kafka.KafkaData kafkaData = 1;</code>
       */
      public Builder addKafkaData(
          kafka.KafkaDataOuterClass.KafkaData.Builder builderForValue) {
        if (kafkaDataBuilder_ == null) {
          ensureKafkaDataIsMutable();
          kafkaData_.add(builderForValue.build());
          onChanged();
        } else {
          kafkaDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .kafka.KafkaData kafkaData = 1;</code>
       */
      public Builder addKafkaData(
          int index, kafka.KafkaDataOuterClass.KafkaData.Builder builderForValue) {
        if (kafkaDataBuilder_ == null) {
          ensureKafkaDataIsMutable();
          kafkaData_.add(index, builderForValue.build());
          onChanged();
        } else {
          kafkaDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .kafka.KafkaData kafkaData = 1;</code>
       */
      public Builder addAllKafkaData(
          java.lang.Iterable<? extends kafka.KafkaDataOuterClass.KafkaData> values) {
        if (kafkaDataBuilder_ == null) {
          ensureKafkaDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, kafkaData_);
          onChanged();
        } else {
          kafkaDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .kafka.KafkaData kafkaData = 1;</code>
       */
      public Builder clearKafkaData() {
        if (kafkaDataBuilder_ == null) {
          kafkaData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          kafkaDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .kafka.KafkaData kafkaData = 1;</code>
       */
      public Builder removeKafkaData(int index) {
        if (kafkaDataBuilder_ == null) {
          ensureKafkaDataIsMutable();
          kafkaData_.remove(index);
          onChanged();
        } else {
          kafkaDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .kafka.KafkaData kafkaData = 1;</code>
       */
      public kafka.KafkaDataOuterClass.KafkaData.Builder getKafkaDataBuilder(
          int index) {
        return getKafkaDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .kafka.KafkaData kafkaData = 1;</code>
       */
      public kafka.KafkaDataOuterClass.KafkaDataOrBuilder getKafkaDataOrBuilder(
          int index) {
        if (kafkaDataBuilder_ == null) {
          return kafkaData_.get(index);  } else {
          return kafkaDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .kafka.KafkaData kafkaData = 1;</code>
       */
      public java.util.List<? extends kafka.KafkaDataOuterClass.KafkaDataOrBuilder> 
           getKafkaDataOrBuilderList() {
        if (kafkaDataBuilder_ != null) {
          return kafkaDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(kafkaData_);
        }
      }
      /**
       * <code>repeated .kafka.KafkaData kafkaData = 1;</code>
       */
      public kafka.KafkaDataOuterClass.KafkaData.Builder addKafkaDataBuilder() {
        return getKafkaDataFieldBuilder().addBuilder(
            kafka.KafkaDataOuterClass.KafkaData.getDefaultInstance());
      }
      /**
       * <code>repeated .kafka.KafkaData kafkaData = 1;</code>
       */
      public kafka.KafkaDataOuterClass.KafkaData.Builder addKafkaDataBuilder(
          int index) {
        return getKafkaDataFieldBuilder().addBuilder(
            index, kafka.KafkaDataOuterClass.KafkaData.getDefaultInstance());
      }
      /**
       * <code>repeated .kafka.KafkaData kafkaData = 1;</code>
       */
      public java.util.List<kafka.KafkaDataOuterClass.KafkaData.Builder> 
           getKafkaDataBuilderList() {
        return getKafkaDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kafka.KafkaDataOuterClass.KafkaData, kafka.KafkaDataOuterClass.KafkaData.Builder, kafka.KafkaDataOuterClass.KafkaDataOrBuilder> 
          getKafkaDataFieldBuilder() {
        if (kafkaDataBuilder_ == null) {
          kafkaDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kafka.KafkaDataOuterClass.KafkaData, kafka.KafkaDataOuterClass.KafkaData.Builder, kafka.KafkaDataOuterClass.KafkaDataOrBuilder>(
                  kafkaData_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          kafkaData_ = null;
        }
        return kafkaDataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:kafka.KafkaDataList)
    }

    static {
      defaultInstance = new KafkaDataList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:kafka.KafkaDataList)
  }

  public interface KafkaDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:kafka.KafkaData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string topic = 2;</code>
     */
    boolean hasTopic();
    /**
     * <code>required string topic = 2;</code>
     */
    java.lang.String getTopic();
    /**
     * <code>required string topic = 2;</code>
     */
    com.google.protobuf.ByteString
        getTopicBytes();

    /**
     * <code>required bytes key = 3;</code>
     */
    boolean hasKey();
    /**
     * <code>required bytes key = 3;</code>
     */
    com.google.protobuf.ByteString getKey();

    /**
     * <code>required bytes message = 4;</code>
     */
    boolean hasMessage();
    /**
     * <code>required bytes message = 4;</code>
     */
    com.google.protobuf.ByteString getMessage();
  }
  /**
   * Protobuf type {@code kafka.KafkaData}
   */
  public static final class KafkaData extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:kafka.KafkaData)
      KafkaDataOrBuilder {
    // Use KafkaData.newBuilder() to construct.
    private KafkaData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private KafkaData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final KafkaData defaultInstance;
    public static KafkaData getDefaultInstance() {
      return defaultInstance;
    }

    public KafkaData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private KafkaData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              topic_ = bs;
              break;
            }
            case 26: {
              bitField0_ |= 0x00000002;
              key_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000004;
              message_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kafka.KafkaDataOuterClass.internal_static_kafka_KafkaData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kafka.KafkaDataOuterClass.internal_static_kafka_KafkaData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kafka.KafkaDataOuterClass.KafkaData.class, kafka.KafkaDataOuterClass.KafkaData.Builder.class);
    }

    public static com.google.protobuf.Parser<KafkaData> PARSER =
        new com.google.protobuf.AbstractParser<KafkaData>() {
      public KafkaData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new KafkaData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<KafkaData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TOPIC_FIELD_NUMBER = 2;
    private java.lang.Object topic_;
    /**
     * <code>required string topic = 2;</code>
     */
    public boolean hasTopic() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string topic = 2;</code>
     */
    public java.lang.String getTopic() {
      java.lang.Object ref = topic_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          topic_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string topic = 2;</code>
     */
    public com.google.protobuf.ByteString
        getTopicBytes() {
      java.lang.Object ref = topic_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        topic_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int KEY_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString key_;
    /**
     * <code>required bytes key = 3;</code>
     */
    public boolean hasKey() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bytes key = 3;</code>
     */
    public com.google.protobuf.ByteString getKey() {
      return key_;
    }

    public static final int MESSAGE_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString message_;
    /**
     * <code>required bytes message = 4;</code>
     */
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required bytes message = 4;</code>
     */
    public com.google.protobuf.ByteString getMessage() {
      return message_;
    }

    private void initFields() {
      topic_ = "";
      key_ = com.google.protobuf.ByteString.EMPTY;
      message_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTopic()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMessage()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(2, getTopicBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(3, key_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(4, message_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getTopicBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, key_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, message_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static kafka.KafkaDataOuterClass.KafkaData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kafka.KafkaDataOuterClass.KafkaData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kafka.KafkaDataOuterClass.KafkaData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kafka.KafkaDataOuterClass.KafkaData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kafka.KafkaDataOuterClass.KafkaData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static kafka.KafkaDataOuterClass.KafkaData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static kafka.KafkaDataOuterClass.KafkaData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static kafka.KafkaDataOuterClass.KafkaData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static kafka.KafkaDataOuterClass.KafkaData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static kafka.KafkaDataOuterClass.KafkaData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(kafka.KafkaDataOuterClass.KafkaData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code kafka.KafkaData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:kafka.KafkaData)
        kafka.KafkaDataOuterClass.KafkaDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kafka.KafkaDataOuterClass.internal_static_kafka_KafkaData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kafka.KafkaDataOuterClass.internal_static_kafka_KafkaData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kafka.KafkaDataOuterClass.KafkaData.class, kafka.KafkaDataOuterClass.KafkaData.Builder.class);
      }

      // Construct using kafka.KafkaDataOuterClass.KafkaData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        topic_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        key_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        message_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kafka.KafkaDataOuterClass.internal_static_kafka_KafkaData_descriptor;
      }

      public kafka.KafkaDataOuterClass.KafkaData getDefaultInstanceForType() {
        return kafka.KafkaDataOuterClass.KafkaData.getDefaultInstance();
      }

      public kafka.KafkaDataOuterClass.KafkaData build() {
        kafka.KafkaDataOuterClass.KafkaData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public kafka.KafkaDataOuterClass.KafkaData buildPartial() {
        kafka.KafkaDataOuterClass.KafkaData result = new kafka.KafkaDataOuterClass.KafkaData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.topic_ = topic_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.key_ = key_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.message_ = message_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kafka.KafkaDataOuterClass.KafkaData) {
          return mergeFrom((kafka.KafkaDataOuterClass.KafkaData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kafka.KafkaDataOuterClass.KafkaData other) {
        if (other == kafka.KafkaDataOuterClass.KafkaData.getDefaultInstance()) return this;
        if (other.hasTopic()) {
          bitField0_ |= 0x00000001;
          topic_ = other.topic_;
          onChanged();
        }
        if (other.hasKey()) {
          setKey(other.getKey());
        }
        if (other.hasMessage()) {
          setMessage(other.getMessage());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTopic()) {
          
          return false;
        }
        if (!hasKey()) {
          
          return false;
        }
        if (!hasMessage()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        kafka.KafkaDataOuterClass.KafkaData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (kafka.KafkaDataOuterClass.KafkaData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object topic_ = "";
      /**
       * <code>required string topic = 2;</code>
       */
      public boolean hasTopic() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string topic = 2;</code>
       */
      public java.lang.String getTopic() {
        java.lang.Object ref = topic_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            topic_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string topic = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTopicBytes() {
        java.lang.Object ref = topic_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          topic_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string topic = 2;</code>
       */
      public Builder setTopic(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        topic_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string topic = 2;</code>
       */
      public Builder clearTopic() {
        bitField0_ = (bitField0_ & ~0x00000001);
        topic_ = getDefaultInstance().getTopic();
        onChanged();
        return this;
      }
      /**
       * <code>required string topic = 2;</code>
       */
      public Builder setTopicBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        topic_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString key_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes key = 3;</code>
       */
      public boolean hasKey() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bytes key = 3;</code>
       */
      public com.google.protobuf.ByteString getKey() {
        return key_;
      }
      /**
       * <code>required bytes key = 3;</code>
       */
      public Builder setKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes key = 3;</code>
       */
      public Builder clearKey() {
        bitField0_ = (bitField0_ & ~0x00000002);
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString message_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes message = 4;</code>
       */
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required bytes message = 4;</code>
       */
      public com.google.protobuf.ByteString getMessage() {
        return message_;
      }
      /**
       * <code>required bytes message = 4;</code>
       */
      public Builder setMessage(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes message = 4;</code>
       */
      public Builder clearMessage() {
        bitField0_ = (bitField0_ & ~0x00000004);
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:kafka.KafkaData)
    }

    static {
      defaultInstance = new KafkaData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:kafka.KafkaData)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_kafka_KafkaDataList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_kafka_KafkaDataList_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_kafka_KafkaData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_kafka_KafkaData_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n+main/resources/proto/kafka/kafka_data." +
      "proto\022\005kafka\"4\n\rKafkaDataList\022#\n\tkafkaDa" +
      "ta\030\001 \003(\0132\020.kafka.KafkaData\"8\n\tKafkaData\022" +
      "\r\n\005topic\030\002 \002(\t\022\013\n\003key\030\003 \002(\014\022\017\n\007message\030\004" +
      " \002(\014"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_kafka_KafkaDataList_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_kafka_KafkaDataList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_kafka_KafkaDataList_descriptor,
        new java.lang.String[] { "KafkaData", });
    internal_static_kafka_KafkaData_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_kafka_KafkaData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_kafka_KafkaData_descriptor,
        new java.lang.String[] { "Topic", "Key", "Message", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
